[{"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\index.js":"1","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\reportWebVitals.js":"2","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\App.js":"3","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\navigation\\Navigation.js":"4","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\logo\\Logo.js":"5","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\imageLinkForm\\ImageLinkForm.js":"6","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\rank\\Rank.js":"7","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\faceRecognition\\FaceRecognition.js":"8","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\signIn\\SignIn.js":"9","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\register\\Register.js":"10"},{"size":520,"mtime":1609430344363,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3012,"mtime":1611173962841,"results":"14","hashOfConfig":"12"},{"size":704,"mtime":1611173677373,"results":"15","hashOfConfig":"12"},{"size":451,"mtime":1608662403387,"results":"16","hashOfConfig":"12"},{"size":740,"mtime":1609428123200,"results":"17","hashOfConfig":"12"},{"size":277,"mtime":1608587564077,"results":"18","hashOfConfig":"12"},{"size":489,"mtime":1611107390679,"results":"19","hashOfConfig":"12"},{"size":1685,"mtime":1611174143572,"results":"20","hashOfConfig":"12"},{"size":1866,"mtime":1611174151846,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mt5a3a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\index.js",[],["45","46"],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\reportWebVitals.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\App.js",["47"],"import React, { Component, useState } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Logo from './components/logo/Logo';\nimport Register from './components/register/Register';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport SignIn from './components/signIn/SignIn';\nimport Rank from './components/rank/Rank';\nimport './App.css';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: 'd9e0c2b9705b463bae8eaf31a5d0955a'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n}\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() { \n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n                params={particlesOptions}\n              />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit} \n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n              this.state.route === 'signin'\n              ? <SignIn onRouteChange={this.onRouteChange}/>\n              : <Register onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\navigation\\Navigation.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\logo\\Logo.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\imageLinkForm\\ImageLinkForm.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\rank\\Rank.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\faceRecognition\\FaceRecognition.js",["48"],"import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='picture' src={imageUrl} width='500px' height='auto' />\r\n        <div className='bounding-box' style={{left: box.leftCol, top: box.topRow, right: box.rightCol, bottom: box.bottomRow}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\signIn\\SignIn.js",[],"C:\\Users\\Trustin\\source\\repos\\smart-brain\\src\\components\\register\\Register.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":8,"column":9,"nodeType":"59","endLine":8,"endColumn":89},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]